name: Helm Charts Lint

on:
  pull_request:
    branches:
      - main
    paths:
      # Run if any of the following files are changed
      - 'charts/**/templates/**'
      - 'charts/**/values.yaml'
      - 'charts/**/Chart.yaml'

env:
  HELM_VERSION: "v3.10.1"

jobs:
  helm-lint:
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: "Checkout current PR"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Install Helm"
        uses: azure/setup-helm@v1
        with:
          version: "${{ env.HELM_VERSION }}"

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.4.0

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@ceee102ec2387dd9e844e01b530ccd4ec87ce955' # v0.8.0
        with:
          workload_identity_provider: projects/1094498259535/locations/global/workloadIdentityPools/gh-charts/providers/github-by-repos
          service_account: 'publish-helm-charts@devopsre.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: "Login to Artifact Registry"
        run: |
          set -o errexit

          # desired cluster name; default is "kind"
          KIND_CLUSTER_NAME="chart-testing"
          
          # create a temp file for the docker config
          echo "Creating temporary docker client config directory ..."
          DOCKER_CONFIG=$(mktemp -d)
          export DOCKER_CONFIG
          trap 'echo "Removing ${DOCKER_CONFIG}/*" && rm -rf ${DOCKER_CONFIG:?}' EXIT
          
          echo "Creating a temporary config.json"
          # This is to force the omission of credsStore, which is automatically
          # created on supported system. With credsStore missing, "docker login"
          # will store the password in the config.json file.
          # https://docs.docker.com/engine/reference/commandline/login/#credentials-store
          cat <<EOF >"${DOCKER_CONFIG}/config.json"
          {
           "auths": { "gcr.io": {} }
          }
          EOF
          # login to gcr in DOCKER_CONFIG using an access token
          # https://cloud.google.com/container-registry/docs/advanced-authentication#access_token
          echo "Logging in to GCR in temporary docker client config directory ..."
          gcloud auth application-default print-access-token | \
            docker login -u oauth2accesstoken --password-stdin https://us-west1-docker.pkg.dev
          
          # setup credentials on each node
          echo "Moving credentials to kind cluster name='${KIND_CLUSTER_NAME}' nodes ..."
          for node in $(kind get nodes --name "${KIND_CLUSTER_NAME}"); do
            # the -oname format is kind/name (so node/name) we just want name
            node_name=${node#node/}
            # copy the config to where kubelet will look
            docker cp "${DOCKER_CONFIG}/config.json" "${node_name}:/var/lib/kubelet/config.json"
            # restart kubelet to pick up the config
            docker exec "${node_name}" systemctl restart kubelet.service
          done
          
          echo "Done!"

      - name: Install dependencies - Kong CRDs
        if: contains(join(steps.updated_files.outputs.all), 'charts/kong-celo-fullnode/')
        run: |
          kubectl apply -f https://raw.githubusercontent.com/Kong/kong-operator/main/helm-charts/kong/crds/custom-resource-definitions.yaml

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }} --helm-extra-args '--no-hooks' 
