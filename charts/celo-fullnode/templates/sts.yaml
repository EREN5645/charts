apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "common.fullname" . }}
  labels:
    {{- include "common.standard.labels" . | nindent 4 }}
    component: celo-fullnode
spec:
  {{- if .Values.storage.enable }}
  volumeClaimTemplates:
  - metadata:
      name: data
      {{- with .Values.storage.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      storageClassName: {{ .Values.storage.storageClass }}
      accessModes: [ "{{ .Values.storage.accessModes }}" ]
      resources:
        requests:
          storage: {{ .Values.storage.size }}
      {{- with .Values.storage.dataSource }}
      dataSource:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- end }}
  podManagementPolicy: Parallel
  updateStrategy:
    {{- toYaml .Values.geth.updateStrategy | nindent 4 }}
  {{- if not .Values.geth.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  serviceName: {{ template "common.fullname" . }}
  selector:
    matchLabels:
      {{- include "common.standard.short_labels" . | nindent 6 }}
      component: celo-fullnode
  template:
    metadata:
      labels:
        {{- include "common.standard.labels" . | nindent 8 }}
        {{- if .Values.extraPodLabels }}
        {{- toYaml .Values.extraPodLabels | nindent 8 }}
        {{- end }}
        component: celo-fullnode
      {{- if .Values.metrics | default true }}
      annotations:
        {{- include "common.prometheus-annotations" . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.geth.use_gstorage_data | default false }}
      serviceAccountName: gcloud-storage-access
      {{- end }}
      {{- with .Values.geth.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | indent 8 }}
      {{- end }}
      initContainers:
      {{- if .Values.geth.use_gstorage_data | default false }}
        {{- include "common.remove-old-chaindata" . | nindent 8 }}
        {{- include "common.gsutil-sync-data-init-container" . | nindent 8 }}
      {{- end }}
        {{- include "common.conditional-init-genesis-container" . | nindent 8 }}
      {{- if .Values.geth.node_keys }}
        - name: set-node-key
          image: alpine:3.12
          command:
          - /bin/sh
          - -c
          args:
          - |
              RID=$(echo $REPLICA_NAME | grep -Eo '[0-9]+$')
              NODE_KEYS={{ join "," .Values.geth.node_keys }}
              NODE_KEY=$(echo -n $NODE_KEYS | cut -d ',' -f $((RID + 1)))
              echo -n $NODE_KEY > /root/.celo/pkey
          volumeMounts:
          - name: data
            mountPath: /root/.celo
          env:
          - name: REPLICA_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      {{- end }}
      containers:
        {{- include "common.full-node-container" (dict "Values" $.Values "Release" $.Release "Chart" $.Chart "expose" true "ip_addresses" .Values.geth.public_ip_per_node "syncmode" .Values.geth.syncmode "gcmode" .Values.geth.gcmode "rpc_apis" .Values.geth.rpc_apis "pprof" (or (.Values.metrics) (.Values.pprof.enabled)) "pprof_port" (.Values.pprof.port) "metrics" (or (.Values.metrics) (.Values.metrics)) "ports" .Values.geth.service_node_port_per_full_node "light_serve" .Values.geth.light.serve "light_maxpeers" .Values.geth.light.maxpeers "maxpeers" .Values.geth.maxpeers "geth_flags" (.Values.geth.flags | default "") "extra_setup" (include "celo-fullnode.extra_setup" .)) | nindent 8 }}
        {{- if .Values.geth.create_network_endpoint_group }}
        {{- include "celo-fullnode.health-checker-server" (dict "protocol_name" "http" "tcp_check_port" 8545 "server_port" 6000) | nindent 8 }}
        {{- include "celo-fullnode.health-checker-server" (dict "protocol_name" "ws" "tcp_check_port" .Values.geth.ws_port "server_port" 6001) | nindent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.geth.terminationGracePeriodSeconds | default 300 }}
      volumes:
      - name: data
        emptyDir: {}
      - name: data-shared
        emptyDir: {}
      - name: health-check
        configMap:
          name: {{ template "common.fullname" . }}-health-check
          defaultMode: 0555
