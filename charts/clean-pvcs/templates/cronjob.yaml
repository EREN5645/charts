apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "clean-pvcs.fullname" . }}
spec:
  concurrencyPolicy: Allow
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "clean-pvcs.selectorLabels" . | nindent 12 }}
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          serviceAccountName: {{ include "clean-pvcs.serviceAccountName" . }}
          containers:
          - name: kubectl
            securityContext:
              {{- toYaml .Values.securityContext | nindent 14 }}
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
            command:
            - /bin/bash
            - -c
            {{- if .Values.cronjob.args }}
            {{- with .Values.cronjob.args }}
            args:
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- else }}
            args:
            - |
              # Delete pvc that are not currently used
              extraFlagsPvc="{{ .Values.cronjob.extraFlagsPvc }}"
              unused_pvcs="$(kubectl describe pvc \
              | grep -E "^Name:.*$|^Used By:.*$" \
              | grep -B 1 "<none>" \
              | grep -E "^Name:.*$" \
              | grep -v "{{ printf "data-%s-%s-%d" .Release.Namespace .Values.cronjob.component (.Values.cronjob.podIndex | int) }}" \
              {{- range .Values.cronjob.extraSkippedPvc }}
              | grep -v "{{ printf "data-%s-%s-%d" .Release.Namespace .component (.index | int) }}" \
              {{- end }}
              )"
              while IFS= read -r line; do
                pvc=$(echo $line | awk '{print $2}')
                echo "Deleting pvc $pvc"
                kubectl delete pvc -n {{ .Release.Namespace }} $pvc $extraFlagsPvc
              done <<< "$unused_pvcs"

              # Delete the pod to force geth to flush the data to disk
              extraFlagsPod="{{ .Values.cronjob.extraFlagsPod }}"
              kubectl delete pod -n {{ .Release.Namespace }} {{ printf "%s-%s-%d" .Release.Namespace .Values.cronjob.component (.Values.cronjob.podIndex | int) }} $extraFlagsPod
            {{- end }}
          restartPolicy: OnFailure
          terminationGracePeriodSeconds: 30
          {{- with .Values.nodeSelector }}
          nodeSelector:
              {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
              {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
              {{- toYaml . | nindent 8 }}
          {{- end }}
  schedule: {{ .Values.cronjob.schedule }}
  successfulJobsHistoryLimit: 3
  suspend: false
