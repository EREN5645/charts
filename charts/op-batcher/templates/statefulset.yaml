apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "op-batcher.fullname" . }}
  labels:
    {{- include "op-batcher.labels" . | nindent 4 }}
  {{- with .Values.statefulset.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  serviceName: {{ template "op-batcher.name" . }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "op-batcher.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "op-batcher.selectorLabels" . | nindent 8 }}
      annotations:
      {{- with .Values.statefulset.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.config.metrics.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.config.metrics.port }}"
        prometheus.io/path: "/metrics"
      {{- end }}
    spec:
      enableServiceLinks: false
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "op-batcher.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      {{- with .Values.initContainers }}
        {{- tpl (toYaml . | nindent 6) $ }}
      {{- end }}
      containers:
      - name: op-batcher
        image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if .Values.command }}
        command:
          {{- tpl (toYaml .Values.command) $ | nindent 10 }}
        {{- else }}
        command:
        - /bin/sh
        - -c
        {{- end }}
        args:
        - |
          exec op-batcher \
            --l2-eth-rpc={{ .Values.config.l2Url }} \
            --rollup-rpc={{ .Values.config.rollupUrl }} \
            --poll-interval={{ .Values.config.pollInterval }} \
            --num-confirmations={{ .Values.config.numConfirmations }} \
            --safe-abort-nonce-too-low-count={{ .Values.config.safeAbortNonceTooLowCount }} \
            --resubmission-timeout={{ .Values.config.resubmissionTimeout }} \
            {{- if .Values.config.rpc.enabledAdmin }}
            --rpc.enable-admin \
            --rpc.addr={{ .Values.config.rpc.addr }} \
            --rpc.port={{ .Values.config.rpc.port }} \
            {{- end }}
            --data-availability-type={{ .Values.config.dataAvailabilityType }} \
            {{- with .Values.config.batchType }}
            --batch-type={{ . }} \
            {{- end }}
            {{- with .Values.config.maxChannelDuration }}
            --max-channel-duration={{ . }} \
            {{- end }}
            {{- with .Values.config.maxL1TxSizeBytes }}
            --max-l1-tx-size-bytes={{ . }} \
            {{- end }}
            {{- with .Values.config.subSafetyMargin }}
            --sub-safety-margin={{ . }} \
            {{- end }}
            {{- with .Values.config.feeLimitMultiplier }}
            --fee-limit-multiplier={{ . }} \
            {{- end }}
            {{- range $key, $value := .Values.config.txmgr }}
            {{- if kindIs "string" $value }}
            {{- if ne $value "" }}
            --txmgr.{{ $key | snakecase | replace "_" "-" }}={{ $value }} \
            {{- end }}
            {{- else }}
            --txmgr.{{ $key | snakecase | replace "_" "-" }}={{ default 0 $value }} \
            {{- end }}
            {{- end }}
            --l1-eth-rpc=$L1_URL \
            {{- if .Values.config.metrics.enabled }}
            --metrics.enabled \
            --metrics.addr={{ .Values.config.metrics.addr }} \
            --metrics.port={{ .Values.services.metrics.port }} \
            {{- end }}
            --log.level={{ .Values.config.logs.level }} \
            --log.format={{ .Values.config.logs.format }} \
            --log.color={{ .Values.config.logs.color }}
        env:
        - name: OP_BATCHER_PRIVATE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ ternary (include "op-batcher.fullname" .) .Values.secrets.privateKey.secretName (not (empty .Values.secrets.privateKey.value)) }}
              key: {{ ternary "privateKey" .Values.secrets.privateKey.secretKey (not (empty .Values.secrets.privateKey.value)) }}
        - name: L1_URL
          valueFrom:
            secretKeyRef:
              name: {{ ternary (include "op-batcher.fullname" .) .Values.secrets.l1Url.secretName (not (empty .Values.secrets.l1Url.value)) }}
              key: {{ ternary "l1Url" .Values.secrets.l1Url.secretKey (not (empty .Values.secrets.l1Url.value)) }}
        ports:
        - name: rpc
          containerPort: {{ .Values.config.rpc.port }}
        {{- if .Values.config.metrics }}
        - name: metrics
          containerPort: {{ .Values.config.metrics.port }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          {{- include "op-batcher.healthcheck" (list $ .Values.livenessProbe) | nindent 10 }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          {{- include "op-batcher.healthcheck" (list $ .Values.readinessProbe) | nindent 10 }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.sidecarContainers }}
        {{- tpl (toYaml . | nindent 6) $ }}
      {{- end }}
