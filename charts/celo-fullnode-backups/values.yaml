geth:
  # -- Extra flags to pass to celo-blockchain
  additional_flags: ''
  # -- gcmode for celo-blockchain. Possible values are `full` and `archive`
  gcmode: full
  # -- resources for the celo-blockchain statefulset
  resources:
    requests:
      memory: "8Gi"
      cpu: "3"
    limits: {}
  persistence:
    # -- Size of the persistent volume claim for the celo-blockchain statefulset. It will be used as the source for the snapshot (so snapshot size)
    size: 100Gi
    # -- Storage class for the persistent volume claim for the celo-blockchain statefulset.
    storageClassName: premium-rwo
  initial_snapshot:
    # -- Enable initial snapshot
    enabled: false
    # -- Kubernetes kind of the initial snapshot
    kind: VolumeSnapshot
    # -- Kubernetes handle of the initial snapshot
    snapshotHandleReference: projects/my-project/global/snapshots/snapshot-1234567890

snapshot:
  # -- VolumeSnapshotClassName. Requires [gce-pd-csi-driver](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/gce-pd-csi-driver) to be installed.
  volumeSnapshotClassName: gce-snaptshot
  copy_process:
    # -- Enable copying the snapshot to another namespace
    enabled: true
    # -- Namespace where the snapshot will be copied
    namespace_copy_to: rc1
    # -- Name for the volumeSnapshot and volumeSnapshotContent that the "move" process will create
    volumeSnapshot_name_copy_to: forno-snapshot
  # -- Schedule for the geth sync CronJob
  sync_schedule: "0/60 * * * *"
  # -- Schedule for the move snapshot CronJob
  move_schedule: "30/60 * * * *"
  # -- Schedules for the Gemini SnapshotGroup CRD, see [Gemini Schedules](https://github.com/FairwindsOps/gemini#schedules)
  snapshot_schedule:
    - every: "60 minutes"
      keep: 2
    - every: "1 days"
      keep: 1

# -- Source: [FairwindsOps/gemini](https://github.com/FairwindsOps/gemini)
gemini:
  enabled: false
