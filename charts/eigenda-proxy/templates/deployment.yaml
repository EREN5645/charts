apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eigenda-proxy.fullname" . }}
  labels:
    {{- include "eigenda-proxy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "eigenda-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: {{ quote .Values.services.metrics.port }}
        prometheus.io/scrape: "true"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "eigenda-proxy.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      enableServiceLinks: false
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "eigenda-proxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: download-srs
          image: alpine:latest
          command:
            - /bin/sh
            - -c
          args:
            - |
              DOWNLOADED_FILE=false
              echo "Downloading srs resources"
              mkdir -p /data/resources
              cd /data
              if ! [ -f /data/resources/g1.point ]; then
                echo "g1.point does not exist."
                echo "Downloading g1 point. This could take upto 5 minutes"
                wget https://srs-mainnet.s3.amazonaws.com/kzg/g1.point --output-document=/data/resources/g1.point
                DOWNLOADED_FILE=true
              else
                echo "g1.point already exists."
              fi

              if ! [ -f /data/resources/g2.point.powerOf2 ]; then
                echo "g2.point.powerOf2 does not exist."
                echo "Downloading g2 point powerOf2. This will take few seconds"
                wget https://srs-mainnet.s3.amazonaws.com/kzg/g2.point.powerOf2 --output-document=/data/resources/g2.point.powerOf2
                DOWNLOADED_FILE=true
              else
                echo "g2.point.powerOf2 already exists."
              fi

              # Any time we download the file, validate hashes
              if [ "$DOWNLOADED_FILE" = true ]; then
                echo "validating hashes of g1 and g2 points This could take upto 5 minutes"
                wget https://github.com/Layr-Labs/eigenda-operator-setup/blob/master/resources/srssha256sums.txt --output-document=/data/resources/srssha256sums.txt
                if (cd /data/resources && sha256sum -c srssha256sums.txt); then
                  echo "Checksums match. Verification successful."
                else
                  echo "Error: Checksums do not match. Exiting."
                  exit 1
                fi
              fi
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: eigenda-proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
          args:
            - |
              mkdir -p /data/resources
              exec /app/eigenda-proxy \
                --addr=0.0.0.0 \
                --port={{ .Values.services.api.port }} \
                --eigenda-rpc={{ .Values.config.disperser.rpc }} \
                --eigenda-status-query-timeout=45m \
                --eigenda-g1-path=/data/resources/g1.point \
                --eigenda-g2-tau-path=/data/resources/g2.point.powerOf2 \
                --eigenda-disable-tls=false \
                --metrics.enabled=true \
                --metrics.addr=0.0.0.0 \
                --metrics.port={{ .Values.services.metrics.port }}
          env:
            - name: EIGENDA_PROXY_SIGNER_PRIVATE_KEY_HEX
              value: {{ toString .Values.config.privateKey }}
          ports:
            - name: api
              containerPort: {{ .Values.services.api.port }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.services.metrics.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      updateStrategy:
        type: Recreate
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: data-{{ include "eigenda-proxy.fullname" . }}
        {{ else }}
          emptyDir: {}
        {{- end }}
