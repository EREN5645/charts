---
{{- $gcp_service_account_name_secrets_created := include "celo.blockscout.sanitize-gcp-service-account-name" (dict "name" (printf "%s-secrets" .Release.Name)) -}}
{{- $gcp_service_account_name_secrets := default .Values.infrastructure.configConnector.overrideCloudSecretsGcloudSA (printf "%s@%s.iam.gserviceaccount.com" $gcp_service_account_name_secrets_created .Values.infrastructure.gcp.projectId) }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-secrets
  labels:
    {{- include "celo.blockscout.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/resource-policy": keep
    "iam.gke.io/gcp-service-account": {{ $gcp_service_account_name_secrets }}
---
{{- /*
{{ .Release.Name }}-rbac resources. This Service Account is used for reading the secrets
from Secret Manager.
*/}}
{{- if not .Values.infrastructure.configConnector.overrideCloudSecretsGcloudSA }}
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMServiceAccount
metadata:
  name: {{ .Release.Name }}-secrets
  namespace: {{ .Values.infrastructure.configConnector.namespace }}
spec:
  displayName: {{ .Release.Name }}-secrets
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicy
metadata:
  name: {{ .Release.Name }}-workload-identity
  namespace: {{ .Values.infrastructure.configConnector.namespace }}
spec:
  resourceRef:
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    name: {{ .Release.Name }}-rbac
  bindings:
    - role: roles/iam.workloadIdentityUser
      members:
        - serviceAccount:{{ .Values.infrastructure.gcp.projectId }}.svc.id.goog[{{ .Release.Namespace }}/{{ .Release.Name }}-rbac]
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: {{ .Release.Name }}-secrets
  namespace: {{ .Values.infrastructure.configConnector.namespace }}
spec:
  member: serviceAccount:{{ $gcp_service_account_name_secrets_created }}@{{ .Values.infrastructure.gcp.projectId }}.iam.gserviceaccount.com
  role: roles/cloudsql.client
  condition:
    title: "Limit Secret Access"
    description: "Limit access to specific Secrets from Secret Manager"
    {{- $expression := "" -}}
    {{- range $secret_name := split "," (include "celo.blockscout.all-secrets-from-secretmanager-names" (dict "Values" .Values)) -}}
    {{- $expression = printf "%sresource.name.startsWith('projects/%s/secrets/%s') || " $expression $.Values.infrastructure.gcp.projectId $secret_name -}}
    {{- end -}}
    {{- $expression = trimSuffix " || " $expression }}
    expression: "{{ $expression }}"
  resourceRef:
    kind: Project
    external: projects/{{ .Values.infrastructure.gcp.projectId }}
---
{{- end -}}
