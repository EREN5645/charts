apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-migration
  labels:
    {{- include "celo.blockscout.labels" . | nindent 4 }}
    component: blockscout-migration
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "4"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "celo.blockscout.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Release.Name }}-rbac
      initContainers:
      {{- include "celo.blockscout.initContainer.secrets-init" . | nindent 6 }}
      containers:
      {{- $data := dict "Release" .Release "Values" .Values "Database" .Values.blockscout.indexer.db -}}
      {{- include "celo.blockscout.container.db-terminating-sidecar" $data | nindent 6 }}
      - name: blockscout-migration
        image: {{ .Values.blockscout.shared.image.repository }}:{{ .Values.blockscout.shared.image.tag }}
        imagePullPolicy: {{ .Values.blockscout.shared.image.pullPolicy }}
        command:
        - /tmp/pod/secrets-init
        args:
        - --provider
        - google
        - /bin/sh
        - -c
        - |
           trap "touch /tmp/pod/main-terminated" EXIT
           [ ${DROP_DB} == "true" ] && mix do ecto.drop, ecto.create
           mix do ecto.migrate --no-compile
        resources:
          requests:
            memory: 250M
            cpu: 200m
        volumeMounts:
          - mountPath: /tmp/pod
            name: temporary-dir
        env:
        - name: DROP_DB
          value: "{{ default "false" .Values.blockscout.shared.db.drop }}"
        {{- include "celo.blockscout.env-vars" $data  | nindent 8 }}
      volumes:
        {{- include "celo.blockscout.volume.cloudsql-credentials" . | nindent 8 }}
        {{- include "celo.blockscout.volume.temporary-dir" . | nindent 8 }}
      restartPolicy: Never
  backoffLimit: 0
