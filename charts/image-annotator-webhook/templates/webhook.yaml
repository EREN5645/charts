---
{{ $ca := genCA "svc-cat-ca" 3650 }}
{{ $svcName := include "image-annotator-webhook.fullname" . }}
{{ $cn := printf "%s.%s.svc" $svcName .Release.Namespace }}
{{ $server := genSignedCert $cn nil (list $cn "") 365 $ca }}

apiVersion: v1
kind: List
metadata:
items:

- apiVersion: v1
  kind: Secret
  metadata:
    name: {{ template "image-annotator-webhook.fullname" . }}
  data:
    tls.crt: {{ b64enc $server.Cert }}
    tls.key: {{ b64enc $server.Key }}
    ca.crt: {{ b64enc $ca.Cert }}

- apiVersion: admissionregistration.k8s.io/v1
  kind: MutatingWebhookConfiguration
  metadata:
    # Adding Aa to force be first webhook alphabetically.
    # Reason is to priorize this webhook over policy controller's
    name: Aa{{ template "image-annotator-webhook.fullname" . }}
  webhooks:
  - name: pods.{{ template "image-annotator-webhook.name" . }}.admission
    admissionReviewVersions:
    - "v1"
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: {{ template "image-annotator-webhook.fullname" . }}
        path: /mutate
        port: 8443
      caBundle: {{ b64enc $ca.Cert }}
    failurePolicy: Ignore
    namespaceSelector:
      matchExpressions:
      - key: webhooks.knative.dev/exclude
        operator: DoesNotExist
      - key: image-annotator-webhook/exclude
        operator: DoesNotExist
    objectSelector:
      matchExpressions:
      - key: release
        operator: NotIn
        values: 
        - {{ .Release.Name }}
      - key: webhooks.knative.dev/exclude
        operator: DoesNotExist
      - key: image-annotator-webhook/exclude
        operator: DoesNotExist
    reinvocationPolicy: IfNeeded
    rules:
    - apiGroups:
      - ""
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
      - pods/status
      scope: '*'
    - apiGroups:
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - daemonsets
      - daemonsets/status
      scope: '*'
    - apiGroups:
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - deployments
      - deployments/status
      scope: '*'
    - apiGroups:
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - replicasets
      - replicasets/status
      scope: '*'
    - apiGroups:
      - apps
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - statefulsets
      - statefulsets/status
      scope: '*'
    - apiGroups:
      - batch
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - cronjobs
      - cronjobs/status
      scope: '*'
    - apiGroups:
      - batch
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - jobs
      - jobs/status
      scope: '*'
    - apiGroups:
      - batch
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - cronjobs
      - cronjobs/status
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
